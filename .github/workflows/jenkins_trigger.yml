name: GitHub Actions + Jenkins Integration

on:
  push:
    branches:
      - main
      - develop

jobs:
  trigger-jenkins:
    runs-on: ubuntu-latest

    steps:
      - name: Securely Trigger Jenkins Build
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
          JENKINS_JOB_NAME: ${{ secrets.JENKINS_JOB_NAME }} # Nome do Multibranch Pipeline (ex: microservices-nttdata-multi-branch)
          CURRENT_BRANCH: ${{ github.ref_name }} # Adiciona a branch atual como vari√°vel
        run: |
          # Formata o nome da branch para uso na URL (substitui '/' por '%2F' se necess√°rio)
          # Ex: feature/my-branch vira feature%2Fmy-branch
          BRANCH_URL_ENCODED=$(echo "$CURRENT_BRANCH" | sed 's/\//%2F/g')

          echo "Attempting to trigger Jenkins job: $JENKINS_JOB_NAME/$CURRENT_BRANCH"
          
          # A URL para disparar um build em um Multibranch Pipeline para uma branch espec√≠fica
          # NOTA: '?token=$JENKINS_SECRET_TOKEN' FOI REMOVIDO DAQUI
          RESPONSE=$(curl -s -w "%{http_code}" -o output.txt \
          -X POST "$JENKINS_URL/job/$JENKINS_JOB_NAME/job/$BRANCH_URL_ENCODED/build" \
          --user "$JENKINS_USER:$JENKINS_API_TOKEN") # O token de API para autentica√ß√£o
          
          if [[ $RESPONSE -ne 201 ]]; then
            echo "‚ùå Jenkins build trigger failed! HTTP Status: $RESPONSE"
            cat output.txt
            exit 1
          fi
          echo "‚úÖ Jenkins build triggered successfully! HTTP Status: $RESPONSE"
          echo "Output: $(cat output.txt)"


      - name: Monitor Jenkins Build Status
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
          JENKINS_JOB_NAME: ${{ secrets.JENKINS_JOB_NAME }} # Nome do Multibranch Pipeline
          CURRENT_BRANCH: ${{ github.ref_name }} # Adiciona a branch atual como vari√°vel
        run: |
          echo "üîç Waiting for Jenkins build to start..."
          sleep 10  # Wait before checking status
          
          # Formata o nome da branch para uso na URL (substitui '/' por '%2F' se necess√°rio)
          BRANCH_URL_ENCODED=$(echo "$CURRENT_BRANCH" | sed 's/\//%2F/g')

          # A URL da API para o √∫ltimo build de uma branch espec√≠fica
          BUILD_URL="$JENKINS_URL/job/$JENKINS_JOB_NAME/job/$BRANCH_URL_ENCODED/lastBuild/api/json"
          
          while true; do
            # Verifica se o jq est√° dispon√≠vel (geralmente est√° em ubuntu-latest)
            if ! command -v jq &> /dev/null; then
                echo "jq could not be found, please ensure it is installed in the runner environment."
                exit 1
            fi

            STATUS=$(curl -s --user "$JENKINS_USER:$JENKINS_API_TOKEN" "$BUILD_URL" | jq -r '.result')
          
            if [[ "$STATUS" == "SUCCESS" ]]; then
              echo "‚úÖ Jenkins Build Successful!"
              exit 0
            elif [[ "$STATUS" == "FAILURE" ]]; then
              echo "‚ùå Jenkins Build Failed!"
              exit 1
            elif [[ "$STATUS" == "null" ]]; then
              echo "‚è≥ Jenkins build still running..."
              sleep 10
            else
              echo "‚ö†Ô∏è Unexpected status: $STATUS. Checking again in 10 seconds..."
              sleep 10
            fi
          done