name: GitHub Actions + Jenkins Integration

on:
  push:
    branches:
      - main
      - develop

jobs:
  trigger-jenkins:
    runs-on: ubuntu-latest
    outputs:
      jenkins_build_number: ${{ steps.trigger_step.outputs.build_number }}
      jenkins_job_name_output: ${{ steps.trigger_step.outputs.job_name_output }}
      jenkins_branch_output: ${{ steps.trigger_step.outputs.branch_output }}

    steps:
      - name: Securely Trigger Jenkins Build
        id: trigger_step
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
          JENKINS_JOB_NAME: ${{ secrets.JENKINS_JOB_NAME }}
          CURRENT_BRANCH: ${{ github.ref_name }}
        run: |
          BRANCH_URL_ENCODED=$(echo "$CURRENT_BRANCH" | sed 's/\//%2F/g')
          
          JOB_FULL_PATH="$JENKINS_URL/job/$JENKINS_JOB_NAME/job/$BRANCH_URL_ENCODED"
          echo "DEBUG: JOB_FULL_PATH set to: $JOB_FULL_PATH"

          echo "Attempting to trigger Jenkins job: $JOB_FULL_PATH"
          
          # Dispara o build
          CURL_OUTPUT=$(curl -s -w "%{http_code}" -o output.txt \
          -X POST "$JOB_FULL_PATH/build" \
          --user "$JENKINS_USER:$JENKINS_API_TOKEN")

          HTTP_STATUS=$(echo "$CURL_OUTPUT" | tail -n 1) # Pega o c√≥digo HTTP
          
          if [[ "$HTTP_STATUS" -ne 201 ]]; then
            echo "‚ùå Jenkins build trigger failed! HTTP Status: $HTTP_STATUS"
            cat output.txt
            exit 1
          fi
          
          echo "‚úÖ Jenkins build triggered successfully! HTTP Status: $HTTP_STATUS"
          echo "Output: $(cat output.txt)" # Imprimir output.txt para ver se tem algo relevante

          # Como o Location header est√° vazio, vamos esperar um pouco e consultar o "lastBuild"
          echo "Location header was empty. Waiting 15 seconds for Jenkins to process and then find the latest build..."
          sleep 15 # D√™ um tempo para o Jenkins realmente iniciar o build

          # URL para obter informa√ß√µes do √∫ltimo build da branch
          LAST_BUILD_API_URL="$JOB_FULL_PATH/lastBuild/api/json"
          
          JENKINS_BUILD_NUMBER=""
          MAX_RETRIES=10 # Tentar obter o build number por at√© 10*5 = 50 segundos
          for i in $(seq 1 $MAX_RETRIES); do
            echo "Attempt $i/$MAX_RETRIES to get last build number from $LAST_BUILD_API_URL"
            API_RESPONSE=$(curl -s --user "$JENKINS_USER:$JENKINS_API_TOKEN" "$LAST_BUILD_API_URL")
          
            # Verifique se a resposta da API est√° vazia ou n√£o √© um JSON v√°lido
            if [[ -z "$API_RESPONSE" || "$(echo "$API_RESPONSE" | jq empty 2>/dev/null)" == "" ]]; then
              echo "‚ö†Ô∏è Jenkins API response empty or invalid JSON. Retrying..."
              sleep 5
              continue
            fi

            # Tenta extrair o n√∫mero do build. Se for "null" ou vazio, significa que ainda n√£o come√ßou ou erro
            BUILD_ID=$(echo "$API_RESPONSE" | jq -r '.id')
          
            if [[ "$BUILD_ID" != "null" && -n "$BUILD_ID" ]]; then
              JENKINS_BUILD_NUMBER="$BUILD_ID"
              echo "‚úÖ Found Jenkins build number: $JENKINS_BUILD_NUMBER"
              break
            else
              echo "Jenkins last build number not yet available. Waiting for 5 seconds..."
              sleep 5
            fi
          done

          if [[ -z "$JENKINS_BUILD_NUMBER" ]]; then
              echo "‚ùå Error: Could not determine Jenkins build number after multiple attempts."
              exit 1
          fi

          echo "DEBUG: Final JENKINS_BUILD_NUMBER before export: $JENKINS_BUILD_NUMBER"
          echo "DEBUG: Final JOB_FULL_PATH (reconstru√≠do) before export: $JENKINS_URL/job/$JENKINS_JOB_NAME/job/$CURRENT_BRANCH"

          echo "build_number=$JENKINS_BUILD_NUMBER" >> "$GITHUB_OUTPUT"
          echo "job_name_output=$JENKINS_JOB_NAME" >> "$GITHUB_OUTPUT"
          echo "branch_output=$CURRENT_BRANCH" >> "$GITHUB_OUTPUT"

  monitor-jenkins:
    needs: trigger-jenkins
    runs-on: ubuntu-latest
    steps:
      - name: Monitor Jenkins Build Status
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
          JENKINS_BUILD_NUMBER: ${{ needs.trigger-jenkins.outputs.jenkins_build_number }}
          JENKINS_JOB_PATH_BASE: ${{ needs.trigger-jenkins.outputs.jenkins_job_name_output }}
          JENKINS_BRANCH_NAME: ${{ needs.trigger-jenkins.outputs.jenkins_branch_output }}
        run: |
          BRANCH_URL_ENCODED=$(echo "$JENKINS_BRANCH_NAME" | sed 's/\//%2F/g')
          JENKINS_JOB_PATH="$JENKINS_URL/job/$JENKINS_JOB_PATH_BASE/job/$BRANCH_URL_ENCODED"
          
          echo "üîç Monitoring Jenkins build number $JENKINS_BUILD_NUMBER at $JENKINS_JOB_PATH"
          
          # Verifica se as vari√°veis essenciais est√£o presentes
          if [[ -z "$JENKINS_BUILD_NUMBER" || -z "$JENKINS_JOB_PATH" ]]; then
            echo "‚ùå Error: Missing Jenkins build number or job path for monitoring. This indicates a problem in the trigger job."
            exit 1
          fi

          BUILD_URL="$JENKINS_JOB_PATH/$JENKINS_BUILD_NUMBER/api/json"
          
          while true; do
            if ! command -v jq &> /dev/null; then
                echo "jq could not be found, please ensure it is installed in the runner environment."
                exit 1
            fi

            API_RESPONSE=$(curl -s --user "$JENKINS_USER:$JENKINS_API_TOKEN" "$BUILD_URL")
          
            if [[ -z "$API_RESPONSE" || "$(echo "$API_RESPONSE" | jq empty 2>/dev/null)" == "" ]]; then
              echo "‚ö†Ô∏è Jenkins API response empty or invalid JSON for build $JENKINS_BUILD_NUMBER. Retrying in 10 seconds..."
              sleep 10
              continue
            fi

            STATUS=$(echo "$API_RESPONSE" | jq -r '.result')
            BUILDING=$(echo "$API_RESPONSE" | jq -r '.building')

            if [[ "$BUILDING" == "true" ]]; then
              echo "‚è≥ Jenkins build still running..."
              sleep 10
            elif [[ "$STATUS" == "SUCCESS" ]]; then
              echo "‚úÖ Jenkins Build Successful!"
              exit 0
            elif [[ "$STATUS" == "FAILURE" ]]; then
              echo "‚ùå Jenkins Build Failed!"
              echo "Jenkins Build Log: $JENKINS_JOB_PATH/$JENKINS_BUILD_NUMBER/console"
              exit 1
            elif [[ "$STATUS" == "UNSTABLE" ]]; then
              echo "‚ö†Ô∏è Jenkins Build Unstable!"
              echo "Jenkins Build Log: $JENKINS_JOB_PATH/$JENKINS_BUILD_NUMBER/console"
              exit 1
            elif [[ "$STATUS" == "ABORTED" ]]; then
              echo "‚õî Jenkins Build Aborted!"
              echo "Jenkins Build Log: $JENKINS_JOB_PATH/$JENKINS_BUILD_NUMBER/console"
              exit 1
            else
              echo "‚ö†Ô∏è Unexpected status or not yet finished: '$STATUS' (Building: $BUILDING). Checking again in 10 seconds..."
              sleep 10
            fi
          done